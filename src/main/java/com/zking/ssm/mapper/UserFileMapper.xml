<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zking.ssm.mapper.UserFileMapper">

  <resultMap id="BaseResultMap" type="com.zking.ssm.model.UserFile">
    <constructor>
      <idArg column="id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="state" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="remark" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="auditTime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="applyTime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="auditor_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="applier_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="score" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="file" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="filetype_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="image" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="userinfo_id" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, state, remark, auditTime, applyTime, auditor_id, applier_id, score, file, filetype_id, 
    image, userinfo_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from userfile
    where userinfo_id = #{id}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from userfile
    where userinfo_id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.zking.ssm.model.UserFile">
    <selectKey keyProperty="id" resultType="java.lang.String" order="BEFORE">
      select replace(uuid(),'-','') AS id
    </selectKey>
    insert into userfile (id, state, remark, 
      auditTime, applyTime, auditor_id, 
      applier_id, score, file, 
      filetype_id, image, userinfo_id
      )
    values (#{id,jdbcType=VARCHAR}, #{state,jdbcType=TINYINT}, #{remark,jdbcType=VARCHAR}, 
      #{audittime,jdbcType=TIMESTAMP}, #{applytime,jdbcType=TIMESTAMP}, #{auditorId,jdbcType=INTEGER}, 
      #{applierId,jdbcType=INTEGER}, #{score,jdbcType=TINYINT}, #{file,jdbcType=VARCHAR}, 
      #{filetypeId,jdbcType=INTEGER}, #{image,jdbcType=VARCHAR}, #{userinfoId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zking.ssm.model.UserFile">
    insert into userfile
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="audittime != null">
        auditTime,
      </if>
      <if test="applytime != null">
        applyTime,
      </if>
      <if test="auditorId != null">
        auditor_id,
      </if>
      <if test="applierId != null">
        applier_id,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="file != null">
        file,
      </if>
      <if test="filetypeId != null">
        filetype_id,
      </if>
      <if test="image != null">
        image,
      </if>
      <if test="userinfoId != null">
        userinfo_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="audittime != null">
        #{audittime,jdbcType=TIMESTAMP},
      </if>
      <if test="applytime != null">
        #{applytime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditorId != null">
        #{auditorId,jdbcType=INTEGER},
      </if>
      <if test="applierId != null">
        #{applierId,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        #{score,jdbcType=TINYINT},
      </if>
      <if test="file != null">
        #{file,jdbcType=VARCHAR},
      </if>
      <if test="filetypeId != null">
        #{filetypeId,jdbcType=INTEGER},
      </if>
      <if test="image != null">
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="userinfoId != null">
        #{userinfoId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zking.ssm.model.UserFile">
    update userfile
    <set>
      <if test="state != null">
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="audittime != null">
        auditTime = #{audittime,jdbcType=TIMESTAMP},
      </if>
      <if test="applytime != null">
        applyTime = #{applytime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditorId != null">
        auditor_id = #{auditorId,jdbcType=INTEGER},
      </if>
      <if test="applierId != null">
        applier_id = #{applierId,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=TINYINT},
      </if>
      <if test="file != null">
        file = #{file,jdbcType=VARCHAR},
      </if>
      <if test="filetypeId != null">
        filetype_id = #{filetypeId,jdbcType=INTEGER},
      </if>
      <if test="image != null">
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="userinfoId != null">
        userinfo_id = #{userinfoId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zking.ssm.model.UserFile">
    update userfile
    set state = #{state,jdbcType=TINYINT},
      remark = #{remark,jdbcType=VARCHAR},
      auditTime = #{audittime,jdbcType=TIMESTAMP},
      applyTime = #{applytime,jdbcType=TIMESTAMP},
      auditor_id = #{auditorId,jdbcType=INTEGER},
      applier_id = #{applierId,jdbcType=INTEGER},
      score = #{score,jdbcType=TINYINT},
      file = #{file,jdbcType=VARCHAR},
      filetype_id = #{filetypeId,jdbcType=INTEGER},
      image = #{image,jdbcType=VARCHAR},
      userinfo_id = #{userinfoId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>